{
  "openapi": "3.0.0",
  "info": {
    "title": "Task Manager API",
    "description": "API for managing tasks and task-related entities",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api",
      "description": "Main API"
    },
    {
      "url": "/api/v1",
      "description": "Task Management API v1"
    }
  ],
  "tags": [
    {
      "name": "Tasks",
      "description": "Endpoints for managing tasks"
    },
    {
      "name": "Task Types",
      "description": "Endpoints for managing task types"
    },
    {
      "name": "Task Templates",
      "description": "Endpoints for managing task templates and generating tasks from templates"
    },
    {
      "name": "Epics",
      "description": "Endpoints for managing epics"
    },
    {
      "name": "Jobs To Be Done",
      "description": "Endpoints for managing jobs to be done (JTBD)"
    },
    {
      "name": "User Stories",
      "description": "Endpoints for managing user stories"
    },
    {
      "name": "Requirements Import",
      "description": "Endpoints for importing requirements from agent collaboration"
    },
    {
      "name": "System",
      "description": "System-related endpoints"
    }
  ],
  "paths": {
    "/api/tasks": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get all tasks",
        "responses": {
          "200": {
            "description": "A list of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Tasks"],
        "summary": "Create a new task",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Task type or parent task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/{id}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get a task by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Task ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Task details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetail"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Tasks"],
        "summary": "Update a task",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Task ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Task, task type, or parent task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete a task",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Task ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Cannot delete task with subtasks",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/task-types": {
      "get": {
        "tags": ["Task Types"],
        "summary": "Get all task types",
        "responses": {
          "200": {
            "description": "A list of task types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskType"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Task Types"],
        "summary": "Create a new task type",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskTypeInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task type created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskType"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/task-types/{id}": {
      "get": {
        "tags": ["Task Types"],
        "summary": "Get a task type by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Task Type ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Task type details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskType"
                }
              }
            }
          },
          "404": {
            "description": "Task type not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Task Types"],
        "summary": "Update a task type",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Task Type ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskTypeInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task type updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskType"
                }
              }
            }
          },
          "404": {
            "description": "Task type not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Task Types"],
        "summary": "Delete a task type",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Task Type ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Task type deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Cannot delete task type that is in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Task type not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/task-templates": {
      "get": {
        "tags": ["Task Templates"],
        "summary": "Get all task templates",
        "responses": {
          "200": {
            "description": "A list of task templates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskTemplate"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Task Templates"],
        "summary": "Create a new task template",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskTemplateInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task template created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplate"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/task-templates/{id}": {
      "get": {
        "tags": ["Task Templates"],
        "summary": "Get a task template by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Task Template ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Task template details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplate"
                }
              }
            }
          },
          "404": {
            "description": "Task template not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Task Templates"],
        "summary": "Update a task template",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Task Template ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskTemplateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task template updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTemplate"
                }
              }
            }
          },
          "404": {
            "description": "Task template not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Task Templates"],
        "summary": "Delete a task template",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Task Template ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Task template deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task template not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/task-templates/{id}/generate": {
      "post": {
        "tags": ["Task Templates"],
        "summary": "Generate tasks from a template",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Task Template ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskGenerationInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tasks generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "tasks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Task"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task template not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "tags": ["System"],
        "summary": "Health check endpoint",
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "healthy"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/debug": {
      "get": {
        "tags": ["System"],
        "summary": "Debug endpoint",
        "responses": {
          "200": {
            "description": "Debug information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": ["System"],
        "summary": "Root endpoint",
        "responses": {
          "200": {
            "description": "API information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Task Manager API"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/epics": {
      "get": {
        "tags": ["Epics"],
        "summary": "Get all epics",
        "responses": {
          "200": {
            "description": "List of epics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Epic"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Epics"],
        "summary": "Create a new epic",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EpicInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Epic created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Epic"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/epics/{epicId}": {
      "get": {
        "tags": ["Epics"],
        "summary": "Get epic by ID",
        "parameters": [
          {
            "name": "epicId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Epic details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Epic"
                }
              }
            }
          },
          "404": {
            "description": "Epic not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Epics"],
        "summary": "Update epic",
        "parameters": [
          {
            "name": "epicId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EpicInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Epic updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Epic"
                }
              }
            }
          },
          "404": {
            "description": "Epic not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Epics"],
        "summary": "Delete epic",
        "parameters": [
          {
            "name": "epicId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Epic deleted successfully"
          },
          "404": {
            "description": "Epic not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/jtbd": {
      "get": {
        "tags": ["Jobs To Be Done"],
        "summary": "Get all jobs to be done",
        "responses": {
          "200": {
            "description": "List of jobs to be done",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JTBD"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Jobs To Be Done"],
        "summary": "Create a new job to be done",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JTBDInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Job to be done created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JTBD"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/jtbd/{jtbdId}": {
      "get": {
        "tags": ["Jobs To Be Done"],
        "summary": "Get job to be done by ID",
        "parameters": [
          {
            "name": "jtbdId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job to be done details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JTBD"
                }
              }
            }
          },
          "404": {
            "description": "Job to be done not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Jobs To Be Done"],
        "summary": "Update job to be done",
        "parameters": [
          {
            "name": "jtbdId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JTBDInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Job to be done updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JTBD"
                }
              }
            }
          },
          "404": {
            "description": "Job to be done not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Jobs To Be Done"],
        "summary": "Delete job to be done",
        "parameters": [
          {
            "name": "jtbdId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Job to be done deleted successfully"
          },
          "404": {
            "description": "Job to be done not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stories": {
      "get": {
        "tags": ["User Stories"],
        "summary": "Get all user stories",
        "parameters": [
          {
            "name": "epicId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter stories by epic ID"
          },
          {
            "name": "jtbdId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter stories by job to be done ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of user stories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserStory"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["User Stories"],
        "summary": "Create a new user story",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserStoryInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User story created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStory"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/stories/{storyId}": {
      "get": {
        "tags": ["User Stories"],
        "summary": "Get user story by ID",
        "parameters": [
          {
            "name": "storyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User story details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStory"
                }
              }
            }
          },
          "404": {
            "description": "User story not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["User Stories"],
        "summary": "Update user story",
        "parameters": [
          {
            "name": "storyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserStoryInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User story updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStory"
                }
              }
            }
          },
          "404": {
            "description": "User story not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["User Stories"],
        "summary": "Delete user story",
        "parameters": [
          {
            "name": "storyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User story deleted successfully"
          },
          "404": {
            "description": "User story not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/requirements/import": {
      "post": {
        "summary": "Import requirements from agent collaboration output",
        "tags": ["Requirements Import"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequirementsImport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Requirements imported successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "epicIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "jtbdIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "storyIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "taskIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Implement login feature"
          },
          "description": {
            "type": "string",
            "example": "Create login page with form validation"
          },
          "status": {
            "type": "string",
            "enum": ["TO_DO", "IN_PROGRESS", "IN_REVIEW", "DONE"],
            "example": "TO_DO"
          },
          "priority": {
            "type": "string",
            "enum": ["LOW", "MEDIUM", "HIGH", "URGENT"],
            "example": "MEDIUM"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "example": "2023-12-31T23:59:59Z"
          },
          "estimatedHours": {
            "type": "number",
            "format": "float",
            "example": 8.5
          },
          "actualHours": {
            "type": "number",
            "format": "float",
            "example": 10.0
          },
          "assignedTo": {
            "type": "string",
            "example": "johndoe"
          },
          "createdBy": {
            "type": "string",
            "example": "janedoe"
          },
          "parentId": {
            "type": "integer",
            "nullable": true,
            "example": null
          },
          "taskTypeId": {
            "type": "integer",
            "example": 3
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "taskType": {
            "$ref": "#/components/schemas/TaskType"
          },
          "parent": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "TaskDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Task"
          },
          {
            "type": "object",
            "properties": {
              "subtasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        ]
      },
      "TaskInput": {
        "type": "object",
        "required": ["title", "taskTypeId"],
        "properties": {
          "title": {
            "type": "string",
            "example": "Implement login feature"
          },
          "description": {
            "type": "string",
            "example": "Create login page with form validation"
          },
          "taskTypeId": {
            "type": "integer",
            "example": 3
          },
          "status": {
            "type": "string",
            "enum": ["TO_DO", "IN_PROGRESS", "IN_REVIEW", "DONE"],
            "example": "TO_DO"
          },
          "priority": {
            "type": "string",
            "enum": ["LOW", "MEDIUM", "HIGH", "URGENT"],
            "example": "MEDIUM"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "example": "2023-12-31T23:59:59Z"
          },
          "estimatedHours": {
            "type": "number",
            "format": "float",
            "example": 8.5
          },
          "actualHours": {
            "type": "number",
            "format": "float",
            "example": 10.0
          },
          "assignedTo": {
            "type": "string",
            "example": "johndoe"
          },
          "createdBy": {
            "type": "string",
            "example": "janedoe"
          },
          "parentId": {
            "type": "integer",
            "nullable": true,
            "example": null
          }
        }
      },
      "TaskType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Epic"
          },
          "description": {
            "type": "string",
            "example": "A large body of work that can be broken down into smaller stories"
          },
          "color": {
            "type": "string",
            "example": "#9b59b6"
          },
          "icon": {
            "type": "string",
            "example": "flag"
          },
          "isDefault": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TaskTypeInput": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Epic"
          },
          "description": {
            "type": "string",
            "example": "A large body of work that can be broken down into smaller stories"
          },
          "color": {
            "type": "string",
            "example": "#9b59b6"
          },
          "icon": {
            "type": "string",
            "example": "flag"
          },
          "isDefault": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "TaskTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Weekly Reporting Template"
          },
          "description": {
            "type": "string",
            "example": "Template for creating weekly reporting tasks"
          },
          "tasks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Prepare Financial Report"
                },
                "description": {
                  "type": "string",
                  "example": "Compile financial data for the week"
                },
                "taskTypeId": {
                  "type": "integer",
                  "example": 2
                },
                "dueDate": {
                  "type": "string",
                  "format": "date-time",
                  "example": null
                },
                "daysToComplete": {
                  "type": "integer",
                  "example": 2
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TaskTemplateInput": {
        "type": "object",
        "required": ["name", "tasks"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Weekly Reporting Template"
          },
          "description": {
            "type": "string",
            "example": "Template for creating weekly reporting tasks"
          },
          "tasks": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["title", "taskTypeId"],
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Prepare Financial Report"
                },
                "description": {
                  "type": "string",
                  "example": "Compile financial data for the week"
                },
                "taskTypeId": {
                  "type": "integer",
                  "example": 2
                },
                "dueDate": {
                  "type": "string",
                  "format": "date-time",
                  "example": null
                },
                "daysToComplete": {
                  "type": "integer",
                  "example": 2
                }
              }
            }
          }
        }
      },
      "TaskGenerationInput": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2023-06-01"
          }
        }
      },
      "Health": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "healthy"
          }
        }
      },
      "Epic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "businessGoal": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10
          },
          "status": {
            "type": "string",
            "enum": ["planned", "in_progress", "completed", "blocked"]
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EpicInput": {
        "type": "object",
        "required": ["title", "description", "businessGoal"],
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "businessGoal": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10
          },
          "status": {
            "type": "string",
            "enum": ["planned", "in_progress", "completed", "blocked"],
            "default": "planned"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "createdBy": {
            "type": "string"
          }
        }
      },
      "JTBD": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "epicId": {
            "type": "string"
          },
          "statement": {
            "type": "string"
          },
          "userType": {
            "type": "string"
          },
          "contextualDetails": {
            "type": "string"
          },
          "motivations": {
            "type": "string"
          },
          "expectedOutcome": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10
          },
          "status": {
            "type": "string",
            "enum": ["identified", "validated", "in_progress", "completed"]
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "JTBDInput": {
        "type": "object",
        "required": ["statement", "userType", "expectedOutcome"],
        "properties": {
          "epicId": {
            "type": "string"
          },
          "statement": {
            "type": "string"
          },
          "userType": {
            "type": "string"
          },
          "contextualDetails": {
            "type": "string"
          },
          "motivations": {
            "type": "string"
          },
          "expectedOutcome": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10
          },
          "status": {
            "type": "string",
            "enum": ["identified", "validated", "in_progress", "completed"],
            "default": "identified"
          },
          "createdBy": {
            "type": "string"
          }
        }
      },
      "UserStory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "epicId": {
            "type": "string"
          },
          "jtbdId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "userType": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "benefit": {
            "type": "string"
          },
          "acceptanceCriteria": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "priority": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10
          },
          "points": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "enum": ["backlog", "ready", "in_progress", "review", "done"]
          },
          "technicalConsiderations": {
            "type": "string"
          },
          "designConsiderations": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "assignedTo": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserStoryInput": {
        "type": "object",
        "required": ["userType", "action", "benefit"],
        "properties": {
          "epicId": {
            "type": "string"
          },
          "jtbdId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "userType": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "benefit": {
            "type": "string"
          },
          "acceptanceCriteria": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "priority": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10
          },
          "points": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "enum": ["backlog", "ready", "in_progress", "review", "done"],
            "default": "backlog"
          },
          "technicalConsiderations": {
            "type": "string"
          },
          "designConsiderations": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "assignedTo": {
            "type": "string"
          }
        }
      },
      "RequirementsImport": {
        "type": "object",
        "properties": {
          "collaborationId": {
            "type": "string",
            "description": "ID of the agent collaboration that produced the requirements"
          },
          "projectName": {
            "type": "string",
            "description": "Name of the project"
          },
          "businessGoals": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of business goals identified during collaboration"
          },
          "functionalRequirements": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "priority": {
                  "type": "string",
                  "enum": ["high", "medium", "low"]
                },
                "userType": {
                  "type": "string"
                }
              }
            },
            "description": "Functional requirements identified during collaboration"
          },
          "technicalRequirements": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "impact": {
                  "type": "string",
                  "enum": ["high", "medium", "low"]
                }
              }
            },
            "description": "Technical requirements identified during collaboration"
          },
          "designRequirements": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "impact": {
                  "type": "string",
                  "enum": ["high", "medium", "low"]
                }
              }
            },
            "description": "Design requirements identified during collaboration"
          },
          "constraints": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": ["time", "budget", "technical", "organizational", "legal"]
                }
              }
            },
            "description": "Constraints identified during collaboration"
          },
          "createdBy": {
            "type": "string",
            "description": "ID or name of the user/agent creating the import"
          }
        },
        "required": ["projectName", "businessGoals", "functionalRequirements"]
      }
    }
  }
} 