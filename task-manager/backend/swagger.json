{
  "openapi": "3.0.0",
  "info": {
    "title": "Task Manager API",
    "description": "API documentation for the Task Manager application",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/",
      "description": "Local Development Server"
    }
  ],
  "tags": [
    {
      "name": "Tasks",
      "description": "API endpoints for managing tasks"
    },
    {
      "name": "Task Types",
      "description": "API endpoints for managing task types"
    },
    {
      "name": "System",
      "description": "System-related endpoints"
    }
  ],
  "paths": {
    "/api/tasks": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get all tasks",
        "responses": {
          "200": {
            "description": "A list of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Tasks"],
        "summary": "Create a new task",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Task type or parent task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/{id}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get a task by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Task ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Task details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetail"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Tasks"],
        "summary": "Update a task",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Task ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Task, task type, or parent task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete a task",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Task ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Cannot delete task with subtasks",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/task-types": {
      "get": {
        "tags": ["Task Types"],
        "summary": "Get all task types",
        "responses": {
          "200": {
            "description": "A list of task types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskType"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Task Types"],
        "summary": "Create a new task type",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskTypeInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task type created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskType"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/task-types/{id}": {
      "get": {
        "tags": ["Task Types"],
        "summary": "Get a task type by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Task Type ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Task type details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskType"
                }
              }
            }
          },
          "404": {
            "description": "Task type not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Task Types"],
        "summary": "Update a task type",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Task Type ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskTypeInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task type updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskType"
                }
              }
            }
          },
          "404": {
            "description": "Task type not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Task Types"],
        "summary": "Delete a task type",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Task Type ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Task type deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Cannot delete task type that is in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Task type not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "tags": ["System"],
        "summary": "Health check endpoint",
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "healthy"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/debug": {
      "get": {
        "tags": ["System"],
        "summary": "Debug endpoint",
        "responses": {
          "200": {
            "description": "Debug information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": ["System"],
        "summary": "Root endpoint",
        "responses": {
          "200": {
            "description": "API information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Task Manager API"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Implement login feature"
          },
          "description": {
            "type": "string",
            "example": "Create login page with form validation"
          },
          "status": {
            "type": "string",
            "enum": ["TO_DO", "IN_PROGRESS", "IN_REVIEW", "DONE"],
            "example": "TO_DO"
          },
          "priority": {
            "type": "string",
            "enum": ["LOW", "MEDIUM", "HIGH", "URGENT"],
            "example": "MEDIUM"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "example": "2023-12-31T23:59:59Z"
          },
          "estimatedHours": {
            "type": "number",
            "format": "float",
            "example": 8.5
          },
          "actualHours": {
            "type": "number",
            "format": "float",
            "example": 10.0
          },
          "assignedTo": {
            "type": "string",
            "example": "johndoe"
          },
          "createdBy": {
            "type": "string",
            "example": "janedoe"
          },
          "parentId": {
            "type": "integer",
            "nullable": true,
            "example": null
          },
          "taskTypeId": {
            "type": "integer",
            "example": 3
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "taskType": {
            "$ref": "#/components/schemas/TaskType"
          },
          "parent": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "TaskDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Task"
          },
          {
            "type": "object",
            "properties": {
              "subtasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        ]
      },
      "TaskInput": {
        "type": "object",
        "required": ["title", "taskTypeId"],
        "properties": {
          "title": {
            "type": "string",
            "example": "Implement login feature"
          },
          "description": {
            "type": "string",
            "example": "Create login page with form validation"
          },
          "taskTypeId": {
            "type": "integer",
            "example": 3
          },
          "status": {
            "type": "string",
            "enum": ["TO_DO", "IN_PROGRESS", "IN_REVIEW", "DONE"],
            "example": "TO_DO"
          },
          "priority": {
            "type": "string",
            "enum": ["LOW", "MEDIUM", "HIGH", "URGENT"],
            "example": "MEDIUM"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "example": "2023-12-31T23:59:59Z"
          },
          "estimatedHours": {
            "type": "number",
            "format": "float",
            "example": 8.5
          },
          "actualHours": {
            "type": "number",
            "format": "float",
            "example": 10.0
          },
          "assignedTo": {
            "type": "string",
            "example": "johndoe"
          },
          "createdBy": {
            "type": "string",
            "example": "janedoe"
          },
          "parentId": {
            "type": "integer",
            "nullable": true,
            "example": null
          }
        }
      },
      "TaskType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Epic"
          },
          "description": {
            "type": "string",
            "example": "A large body of work that can be broken down into smaller stories"
          },
          "color": {
            "type": "string",
            "example": "#9b59b6"
          },
          "icon": {
            "type": "string",
            "example": "flag"
          },
          "isDefault": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TaskTypeInput": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Epic"
          },
          "description": {
            "type": "string",
            "example": "A large body of work that can be broken down into smaller stories"
          },
          "color": {
            "type": "string",
            "example": "#9b59b6"
          },
          "icon": {
            "type": "string",
            "example": "flag"
          },
          "isDefault": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      }
    }
  }
} 